{"version":3,"sources":["mod-events.js"],"names":["$","MyAMS","_initialized","events","init","initElement","element","each","idx","elt","context","handlers","data","event","handler","on","options","core","executeFunctionByName","document","Object","entries","getHandlers","result","push","env","bundle","config","modules","console","debug"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAIA,MAAMA,CAAC,GAAGC,KAAK,CAACD,CAAhB;AAEA,MAAIE,YAAY,GAAG,KAAnB;AAGO,MAAMC,MAAM,GAAG;AAErBC,IAAAA,IAAI,EAAE,gBAAM;AACX,UAAIF,YAAJ,EAAkB;AACjB;AACA;;AACDA,MAAAA,YAAY,GAAG,IAAf;AACA,KAPoB;AASrBG,IAAAA,WAAW,EAAE,qBAACC,OAAD,EAAa;AACzBN,MAAAA,CAAC,CAAC,4BAAD,EAA+BM,OAA/B,CAAD,CAAyCC,IAAzC,CAA8C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3D,YACCC,OAAO,GAAGV,CAAC,CAACS,GAAD,CADZ;AAAA,YAECE,QAAQ,GAAGD,OAAO,CAACE,IAAR,CAAa,qBAAb,CAFZ;;AAGA,YAAID,QAAJ,EAAc;AAAA;AAAA;AAAA,gBACDE,KADC;AAAA,gBACMC,OADN;;AAEZJ,YAAAA,OAAO,CAACK,EAAR,CAAWF,KAAX,EAAkB,UAACA,KAAD,EAAQG,OAAR,EAAoB;AACrCf,cAAAA,KAAK,CAACgB,IAAN,CAAWC,qBAAX,CAAiCJ,OAAjC,EAA0CK,QAA1C,EAAoDN,KAApD,EACCG,OAAO,IAAIN,OAAO,CAACE,IAAR,CAAa,oBAAb,CAAX,IAAiD,EADlD;AAEA,aAHD;AAFY;;AACb,6CAA+BQ,MAAM,CAACC,OAAP,CAAeV,QAAf,CAA/B,qCAAyD;AAAA;AAKxD;AACD;AACD,OAZD;AAaA,KAvBoB;;AAyBrB;;;;;;;AAOAW,IAAAA,WAAW,EAAE,qBAAChB,OAAD,EAAUO,KAAV,EAAoB;AAEhC,UACCU,MAAM,GAAG,EADV;AAAA,UAECZ,QAAQ,GAAGL,OAAO,CAACM,IAAR,CAAa,qBAAb,CAFZ;;AAGA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,KAAD,CAAxB,EAAiC;AAChCU,QAAAA,MAAM,CAACC,IAAP,CAAYlB,OAAZ;AACA;;AACDN,MAAAA,CAAC,CAAC,4BAAD,EAA+BM,OAA/B,CAAD,CAAyCC,IAAzC,CAA8C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3D,YACCC,OAAO,GAAGV,CAAC,CAACS,GAAD,CADZ;AAAA,YAECE,QAAQ,GAAGD,OAAO,CAACE,IAAR,CAAa,qBAAb,CAFZ;;AAGA,YAAID,QAAQ,IAAIA,QAAQ,CAACE,KAAD,CAAxB,EAAiC;AAChCU,UAAAA,MAAM,CAACC,IAAP,CAAYd,OAAZ;AACA;AACD,OAPD;AAQA,aAAOa,MAAP;AACA;AAjDoB,GAAf;AAqDP;;;;;;AAGA,MAAItB,KAAK,CAACwB,GAAN,CAAUC,MAAd,EAAsB;AACrBzB,IAAAA,KAAK,CAAC0B,MAAN,CAAaC,OAAb,CAAqBJ,IAArB,CAA0B,QAA1B;AACA,GAFD,MAEO;AACNvB,IAAAA,KAAK,CAACE,MAAN,GAAeA,MAAf;AACA0B,IAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd;AACA","sourcesContent":["/**\n * MyAMS events management\n */\n\nconst $ = MyAMS.$;\n\nlet _initialized = false;\n\n\nexport const events = {\n\n\tinit: () => {\n\t\tif (_initialized) {\n\t\t\treturn;\n\t\t}\n\t\t_initialized = true;\n\t},\n\n\tinitElement: (element) => {\n\t\t$('[data-ams-events-handlers]', element).each((idx, elt) => {\n\t\t\tconst\n\t\t\t\tcontext = $(elt),\n\t\t\t\thandlers = context.data('ams-events-handlers');\n\t\t\tif (handlers) {\n\t\t\t\tfor (const [event, handler] of Object.entries(handlers)) {\n\t\t\t\t\tcontext.on(event, (event, options) => {\n\t\t\t\t\t\tMyAMS.core.executeFunctionByName(handler, document, event,\n\t\t\t\t\t\t\toptions || context.data('ams-events-options') || {});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Get events handlers on given element for a specific event\n\t *\n\t * @param element: the checked element\n\t * @param event: event for which handlers lookup is made\n\t * @returns: an array of elements for which the event handler is defined\n\t */\n\tgetHandlers: (element, event) => {\n\n\t\tconst\n\t\t\tresult = [],\n\t\t\thandlers = element.data('ams-events-handlers');\n\t\tif (handlers && handlers[event]) {\n\t\t\tresult.push(element);\n\t\t}\n\t\t$('[data-ams-events-handlers]', element).each((idx, elt) => {\n\t\t\tconst\n\t\t\t\tcontext = $(elt),\n\t\t\t\thandlers = context.data('ams-events-handlers');\n\t\t\tif (handlers && handlers[event]) {\n\t\t\t\tresult.push(context);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n};\n\n\n/**\n * Global module initialization\n */\nif (MyAMS.env.bundle) {\n\tMyAMS.config.modules.push('events');\n} else {\n\tMyAMS.events = events;\n\tconsole.debug(\"MyAMS: events module loaded...\");\n}\n"],"file":"mod-events-dev.js"}