{"version":3,"sources":["mod-callbacks.js"],"names":["$","MyAMS","_initialized","callbacks","init","initElement","element","each","idx","elt","data","JSON","parse","amsCallback","isArray","e","split","callback","callable","source","options","core","getFunctionByName","amsCallbackOptions","unserialize","getScript","then","console","warn","call","Promise","resolve","window","env","bundle","config","modules","push","debug"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;AAIA,MAAMA,CAAC,GAAGC,KAAK,CAACD,CAAhB;AAEA,MAAIE,YAAY,GAAG,KAAnB;AAGO,MAAMC,SAAS,GAAG;AAExBC,IAAAA,IAAI,EAAE,gBAAM;AACX,UAAIF,YAAJ,EAAkB;AACjB;AACA;;AACDA,MAAAA,YAAY,GAAG,IAAf;AACA,KAPuB;AASxBG,IAAAA,WAAW,EAAE,qBAACC,OAAD,EAAa;AACzBN,MAAAA,CAAC,CAAC,qBAAD,EAAwBM,OAAxB,CAAD,CAAkCC,IAAlC,CAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpD,YAAMC,IAAI,GAAGV,CAAC,CAACS,GAAD,CAAD,CAAOC,IAAP,EAAb;AACA,YAAIP,SAAJ;;AACA,YAAI;AACHA,UAAAA,SAAS,GAAGQ,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,WAAhB,CAAZ;;AACA,cAAI,CAACb,CAAC,CAACc,OAAF,CAAUX,SAAV,CAAL,EAA2B;AAC1BA,YAAAA,SAAS,GAAG,CAACA,SAAD,CAAZ;AACA;AACD,SALD,CAKE,OAAOY,CAAP,EAAU;AACXZ,UAAAA,SAAS,GAAGO,IAAI,CAACG,WAAL,CAAiBG,KAAjB,CAAuB,SAAvB,CAAZ;AACA;;AAVmD;AAAA;AAAA;;AAAA;AAAA;AAAA,gBAWzCC,QAXyC;AAYnD,gBAAIC,QAAQ,SAAZ;AAAA,gBAAcC,MAAM,SAApB;AAAA,gBAAsBC,OAAO,SAA7B;;AACA,gBAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AACjCC,cAAAA,QAAQ,GAAGjB,KAAK,CAACoB,IAAN,CAAWC,iBAAX,CAA6BL,QAA7B,CAAX;AACAE,cAAAA,MAAM,GAAGT,IAAI,CAACa,kBAAd;AACAH,cAAAA,OAAO,GAAGV,IAAI,CAACa,kBAAf;;AACA,kBAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,gBAAAA,OAAO,GAAGA,OAAO,CAACI,WAAR,EAAV;AACA;AACD,aAPD,MAOO;AAAG;AACTN,cAAAA,QAAQ,GAAGjB,KAAK,CAACoB,IAAN,CAAWC,iBAAX,CAA6BL,QAAQ,CAACA,QAAtC,CAAX;AACAE,cAAAA,MAAM,GAAGF,QAAQ,CAACE,MAAlB;AACAC,cAAAA,OAAO,GAAGF,QAAQ,CAACE,OAAnB;AACA;;AACD,gBAAI,OAAOF,QAAP,KAAoB,WAAxB,EAAqC;AACpC,kBAAIC,MAAJ,EAAY;AACXlB,gBAAAA,KAAK,CAACoB,IAAN,CAAWI,SAAX,CAAqBN,MAArB,EAA6BO,IAA7B,CAAkC,YAAM;AACvCR,kBAAAA,QAAQ,GAAGjB,KAAK,CAACoB,IAAN,CAAWC,iBAAX,CAA6BL,QAA7B,CAAX;;AACA,sBAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACpCS,oBAAAA,OAAO,CAACC,IAAR,4BAAiCX,QAAjC;AACA,mBAFD,MAEO;AACNC,oBAAAA,QAAQ,CAACW,IAAT,CAAcpB,GAAd,EAAmBW,OAAnB;AACA;AACD,iBAPD;AAQA,eATD,MASO;AACNO,gBAAAA,OAAO,CAACC,IAAR,iDAAsDX,QAAtD;AACA;AACD,aAbD,MAaO;AACNa,cAAAA,OAAO,CAACC,OAAR,GAAkBL,IAAlB,CAAuB,YAAM;AAC5BR,gBAAAA,QAAQ,CAACW,IAAT,CAAcpB,GAAd,EAAmBW,OAAnB;AACA,eAFD;AAGA;AA1CkD;;AAWpD,+BAAuBjB,SAAvB,8HAAkC;AAAA;AAgCjC;AA3CmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CpD,OA5CD;AA6CA;AAvDuB,GAAlB;AA2DP;;;;;;AAGA,MAAI6B,MAAM,CAAC/B,KAAX,EAAkB;AACjB,QAAIA,KAAK,CAACgC,GAAN,CAAUC,MAAd,EAAsB;AACrBjC,MAAAA,KAAK,CAACkC,MAAN,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,WAA1B;AACA,KAFD,MAEO;AACNpC,MAAAA,KAAK,CAACE,SAAN,GAAkBA,SAAlB;AACAwB,MAAAA,OAAO,CAACW,KAAR,CAAc,mCAAd;AACA;AACD","sourcesContent":["/**\n * MyAMS callbacks management\n */\n\nconst $ = MyAMS.$;\n\nlet _initialized = false;\n\n\nexport const callbacks = {\n\n\tinit: () => {\n\t\tif (_initialized) {\n\t\t\treturn;\n\t\t}\n\t\t_initialized = true;\n\t},\n\n\tinitElement: (element) => {\n\t\t$('[data-ams-callback]', element).each((idx, elt) => {\n\t\t\tconst data = $(elt).data();\n\t\t\tlet callbacks;\n\t\t\ttry {\n\t\t\t\tcallbacks = JSON.parse(data.amsCallback);\n\t\t\t\tif (!$.isArray(callbacks)) {\n\t\t\t\t\tcallbacks = [callbacks];\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tcallbacks = data.amsCallback.split(/[\\s,;]+/);\n\t\t\t}\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tlet callable, source, options;\n\t\t\t\tif (typeof callback === 'string') {\n\t\t\t\t\tcallable = MyAMS.core.getFunctionByName(callback);\n\t\t\t\t\tsource = data.amsCallbackOptions;\n\t\t\t\t\toptions = data.amsCallbackOptions;\n\t\t\t\t\tif (typeof options === 'string') {\n\t\t\t\t\t\toptions = options.unserialize();\n\t\t\t\t\t}\n\t\t\t\t} else {  // JSON object\n\t\t\t\t\tcallable = MyAMS.core.getFunctionByName(callback.callback);\n\t\t\t\t\tsource = callback.source;\n\t\t\t\t\toptions = callable.options;\n\t\t\t\t}\n\t\t\t\tif (typeof callable === 'undefined') {\n\t\t\t\t\tif (source) {\n\t\t\t\t\t\tMyAMS.core.getScript(source).then(() => {\n\t\t\t\t\t\t\tcallable = MyAMS.core.getFunctionByName(callback);\n\t\t\t\t\t\t\tif (typeof callable === 'undefined') {\n\t\t\t\t\t\t\t\tconsole.warn(`Missing callback ${callback}!`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallable.call(elt, options);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(`Missing source for undefined callback ${callback}!`)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\t\tcallable.call(elt, options);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\n\n/**\n * Global module initialization\n */\nif (window.MyAMS) {\n\tif (MyAMS.env.bundle) {\n\t\tMyAMS.config.modules.push('callbacks');\n\t} else {\n\t\tMyAMS.callbacks = callbacks;\n\t\tconsole.debug(\"MyAMS: callbacks module loaded...\");\n\t}\n}\n"],"file":"mod-callbacks-dev.js"}