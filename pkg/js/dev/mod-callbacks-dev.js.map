{"version":3,"sources":["mod-callbacks.js"],"names":["$","MyAMS","_initialized","callbacks","init","initElement","element","each","idx","elt","data","amsCallback","JSON","parse","e","split","isArray","callback","callname","callable","source","options","core","getFunctionByName","amsCallbackOptions","unserialize","getScript","then","console","warn","call","Promise","resolve","window","env","bundle","config","modules","push","debug"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;AAIA,MAAMA,CAAC,GAAGC,KAAK,CAACD,CAAhB;AAEA,MAAIE,YAAY,GAAG,KAAnB;AAGO,MAAMC,SAAS,GAAG;AAExBC,IAAAA,IAAI,EAAE,gBAAM;AACX,UAAIF,YAAJ,EAAkB;AACjB;AACA;;AACDA,MAAAA,YAAY,GAAG,IAAf;AACA,KAPuB;AASxBG,IAAAA,WAAW,EAAE,qBAACC,OAAD,EAAa;AACzBN,MAAAA,CAAC,CAAC,qBAAD,EAAwBM,OAAxB,CAAD,CAAkCC,IAAlC,CAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpD,YAAMC,IAAI,GAAGV,CAAC,CAACS,GAAD,CAAD,CAAOC,IAAP,EAAb;AACA,YAAIP,SAAS,GAAGO,IAAI,CAACC,WAArB;;AACA,YAAI,OAAOR,SAAP,KAAqB,QAAzB,EAAmC;AAClC,cAAI;AACHA,YAAAA,SAAS,GAAGS,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACC,WAAhB,CAAZ;AACA,WAFD,CAEE,OAAOG,CAAP,EAAU;AACXX,YAAAA,SAAS,GAAGO,IAAI,CAACC,WAAL,CAAiBI,KAAjB,CAAuB,SAAvB,CAAZ;AACA;AACD;;AACD,YAAI,CAACf,CAAC,CAACgB,OAAF,CAAUb,SAAV,CAAL,EAA2B;AAC1BA,UAAAA,SAAS,GAAG,CAACA,SAAD,CAAZ;AACA;;AAZmD;AAAA;AAAA;;AAAA;AAAA;AAAA,gBAazCc,QAbyC;AAcnD,gBAAIC,QAAQ,SAAZ;AAAA,gBAAcC,QAAQ,SAAtB;AAAA,gBAAwBC,MAAM,SAA9B;AAAA,gBAAgCC,OAAO,SAAvC;;AACA,gBAAI,OAAOJ,QAAP,KAAoB,QAAxB,EAAkC;AACjCC,cAAAA,QAAQ,GAAGD,QAAX;AACAE,cAAAA,QAAQ,GAAGlB,KAAK,CAACqB,IAAN,CAAWC,iBAAX,CAA6BL,QAA7B,CAAX;AACAE,cAAAA,MAAM,GAAGV,IAAI,CAACc,kBAAd;AACAH,cAAAA,OAAO,GAAGX,IAAI,CAACc,kBAAf;;AACA,kBAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,gBAAAA,OAAO,GAAGA,OAAO,CAACI,WAAR,EAAV;AACA;AACD,aARD,MAQO;AAAG;AACTP,cAAAA,QAAQ,GAAGD,QAAQ,CAACA,QAApB;AACAE,cAAAA,QAAQ,GAAGlB,KAAK,CAACqB,IAAN,CAAWC,iBAAX,CAA6BL,QAA7B,CAAX;AACAE,cAAAA,MAAM,GAAGH,QAAQ,CAACG,MAAlB;AACAC,cAAAA,OAAO,GAAGJ,QAAQ,CAACI,OAAnB;AACA;;AACD,gBAAI,OAAOF,QAAP,KAAoB,WAAxB,EAAqC;AACpC,kBAAIC,MAAJ,EAAY;AACXnB,gBAAAA,KAAK,CAACqB,IAAN,CAAWI,SAAX,CAAqBN,MAArB,EAA6BO,IAA7B,CAAkC,YAAM;AACvCR,kBAAAA,QAAQ,GAAGlB,KAAK,CAACqB,IAAN,CAAWC,iBAAX,CAA6BL,QAA7B,CAAX;;AACA,sBAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACpCS,oBAAAA,OAAO,CAACC,IAAR,4BAAiCX,QAAjC;AACA,mBAFD,MAEO;AACNC,oBAAAA,QAAQ,CAACW,IAAT,CAAcrB,GAAd,EAAmBY,OAAnB;AACA;AACD,iBAPD;AAQA,eATD,MASO;AACNO,gBAAAA,OAAO,CAACC,IAAR,iDAAsDZ,QAAtD;AACA;AACD,aAbD,MAaO;AACNc,cAAAA,OAAO,CAACC,OAAR,GAAkBL,IAAlB,CAAuB,YAAM;AAC5BR,gBAAAA,QAAQ,CAACW,IAAT,CAAcrB,GAAd,EAAmBY,OAAnB;AACA,eAFD;AAGA;AA9CkD;;AAapD,+BAAuBlB,SAAvB,8HAAkC;AAAA;AAkCjC;AA/CmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDpD,OAhDD;AAiDA;AA3DuB,GAAlB;AA+DP;;;;;;AAGA,MAAI8B,MAAM,CAAChC,KAAX,EAAkB;AACjB,QAAIA,KAAK,CAACiC,GAAN,CAAUC,MAAd,EAAsB;AACrBlC,MAAAA,KAAK,CAACmC,MAAN,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,WAA1B;AACA,KAFD,MAEO;AACNrC,MAAAA,KAAK,CAACE,SAAN,GAAkBA,SAAlB;AACAyB,MAAAA,OAAO,CAACW,KAAR,CAAc,mCAAd;AACA;AACD","sourcesContent":["/**\n * MyAMS callbacks management\n */\n\nconst $ = MyAMS.$;\n\nlet _initialized = false;\n\n\nexport const callbacks = {\n\n\tinit: () => {\n\t\tif (_initialized) {\n\t\t\treturn;\n\t\t}\n\t\t_initialized = true;\n\t},\n\n\tinitElement: (element) => {\n\t\t$('[data-ams-callback]', element).each((idx, elt) => {\n\t\t\tconst data = $(elt).data();\n\t\t\tlet callbacks = data.amsCallback;\n\t\t\tif (typeof callbacks === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tcallbacks = JSON.parse(data.amsCallback);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcallbacks = data.amsCallback.split(/[\\s,;]+/);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!$.isArray(callbacks)) {\n\t\t\t\tcallbacks = [callbacks];\n\t\t\t}\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tlet callname, callable, source, options;\n\t\t\t\tif (typeof callback === 'string') {\n\t\t\t\t\tcallname = callback;\n\t\t\t\t\tcallable = MyAMS.core.getFunctionByName(callname);\n\t\t\t\t\tsource = data.amsCallbackOptions;\n\t\t\t\t\toptions = data.amsCallbackOptions;\n\t\t\t\t\tif (typeof options === 'string') {\n\t\t\t\t\t\toptions = options.unserialize();\n\t\t\t\t\t}\n\t\t\t\t} else {  // JSON object\n\t\t\t\t\tcallname = callback.callback;\n\t\t\t\t\tcallable = MyAMS.core.getFunctionByName(callname);\n\t\t\t\t\tsource = callback.source;\n\t\t\t\t\toptions = callback.options;\n\t\t\t\t}\n\t\t\t\tif (typeof callable === 'undefined') {\n\t\t\t\t\tif (source) {\n\t\t\t\t\t\tMyAMS.core.getScript(source).then(() => {\n\t\t\t\t\t\t\tcallable = MyAMS.core.getFunctionByName(callname);\n\t\t\t\t\t\t\tif (typeof callable === 'undefined') {\n\t\t\t\t\t\t\t\tconsole.warn(`Missing callback ${callname}!`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallable.call(elt, options);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(`Missing source for undefined callback ${callback}!`)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\t\tcallable.call(elt, options);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n\n\n/**\n * Global module initialization\n */\nif (window.MyAMS) {\n\tif (MyAMS.env.bundle) {\n\t\tMyAMS.config.modules.push('callbacks');\n\t} else {\n\t\tMyAMS.callbacks = callbacks;\n\t\tconsole.debug(\"MyAMS: callbacks module loaded...\");\n\t}\n}\n"],"file":"mod-callbacks-dev.js"}